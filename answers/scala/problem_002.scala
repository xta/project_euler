// Even Fibonacci numbers

//   Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

//   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

//   By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

val maxValue = 4000000

var fibonacciIndex = Array(1, 2)
var fibonacciTerms = scala.collection.mutable.Set[Int](1, 2)

while (fibonacciIndex(1) < maxValue) {
  val secondValue = fibonacciIndex(1)
  val sum = fibonacciIndex(0) + secondValue

  fibonacciTerms += secondValue
  fibonacciIndex = Array(secondValue, sum)
}

val evens = fibonacciTerms.filter(_ % 2 == 0)
val sum = evens.reduceLeft(_ + _)

println(sum) // #=> 4613732
